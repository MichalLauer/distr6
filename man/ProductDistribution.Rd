% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Wrapper_ProductDistribution.R
\name{ProductDistribution}
\alias{ProductDistribution}
\alias{*.Distribution}
\title{Product Distribution Wrapper}
\usage{
\method{*}{Distribution}(x, y)
}
\arguments{
\item{x, y}{\link{Distribution}}
}
\description{
A wrapper for creating the product distribution of multiple independent probability
distributions.
}
\details{
A product distribution is defined by

\deqn{F_P(X1 = x1,...,XN = xN) = F_{X1}(x1) * ... * F_{XN}(xn)}{F_P(X1 = x1,...,XN = xN) = F_X1(x1) * ... * F_XN(xn)} #nolint
where \eqn{F_P} is the cdf of the product distribution and \eqn{X1,...,XN} are
independent distributions.
}
\examples{

## ------------------------------------------------
## Method `ProductDistribution$new`
## ------------------------------------------------

\dontrun{
ProductDistribution$new(list(Binomial$new(
  prob = 0.5,
  size = 10
), Normal$new(mean = 15)))

ProductDistribution$new(
  distribution = "Binomial",
  params = list(
    list(prob = 0.1, size = 2),
    list(prob = 0.6, size = 4),
    list(prob = 0.2, size = 6)
  )
)

# Equivalently
ProductDistribution$new(
  distribution = "Binomial",
  params = data.table::data.table(prob = c(0.1, 0.6, 0.2), size = c(2, 4, 6))
)
}

## ------------------------------------------------
## Method `ProductDistribution$pdf`
## ------------------------------------------------

p <- ProductDistribution$new(list(
Binomial$new(prob = 0.5, size = 10),
Binomial$new()))
p$pdf(1:5)
p$pdf(1, 2)
p$pdf(1:2)

## ------------------------------------------------
## Method `ProductDistribution$cdf`
## ------------------------------------------------

p <- ProductDistribution$new(list(
Binomial$new(prob = 0.5, size = 10),
Binomial$new()))
p$cdf(1:5)
p$cdf(1, 2)
p$cdf(1:2)
Normal$new() * Binomial$new()
}
\seealso{
Other wrappers: 
\code{\link{Convolution}},
\code{\link{DistributionWrapper}},
\code{\link{HuberizedDistribution}},
\code{\link{MixtureDistribution}},
\code{\link{TruncatedDistribution}},
\code{\link{VectorDistribution}}
}
\concept{wrappers}
\section{Super classes}{
\code{\link[distr6:Distribution]{distr6::Distribution}} -> \code{\link[distr6:DistributionWrapper]{distr6::DistributionWrapper}} -> \code{\link[distr6:VectorDistribution]{distr6::VectorDistribution}} -> \code{ProductDistribution}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-ProductDistribution-new}{\code{ProductDistribution$new()}}
\item \href{#method-ProductDistribution-strprint}{\code{ProductDistribution$strprint()}}
\item \href{#method-ProductDistribution-pdf}{\code{ProductDistribution$pdf()}}
\item \href{#method-ProductDistribution-cdf}{\code{ProductDistribution$cdf()}}
\item \href{#method-ProductDistribution-quantile}{\code{ProductDistribution$quantile()}}
\item \href{#method-ProductDistribution-clone}{\code{ProductDistribution$clone()}}
}
}
\if{html}{\out{
<details><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="distr6" data-topic="Distribution" data-id="confidence"><a href='../../distr6/html/Distribution.html#method-Distribution-confidence'><code>distr6::Distribution$confidence()</code></a></span></li>
<li><span class="pkg-link" data-pkg="distr6" data-topic="Distribution" data-id="correlation"><a href='../../distr6/html/Distribution.html#method-Distribution-correlation'><code>distr6::Distribution$correlation()</code></a></span></li>
<li><span class="pkg-link" data-pkg="distr6" data-topic="Distribution" data-id="iqr"><a href='../../distr6/html/Distribution.html#method-Distribution-iqr'><code>distr6::Distribution$iqr()</code></a></span></li>
<li><span class="pkg-link" data-pkg="distr6" data-topic="Distribution" data-id="liesInSupport"><a href='../../distr6/html/Distribution.html#method-Distribution-liesInSupport'><code>distr6::Distribution$liesInSupport()</code></a></span></li>
<li><span class="pkg-link" data-pkg="distr6" data-topic="Distribution" data-id="liesInType"><a href='../../distr6/html/Distribution.html#method-Distribution-liesInType'><code>distr6::Distribution$liesInType()</code></a></span></li>
<li><span class="pkg-link" data-pkg="distr6" data-topic="Distribution" data-id="parameters"><a href='../../distr6/html/Distribution.html#method-Distribution-parameters'><code>distr6::Distribution$parameters()</code></a></span></li>
<li><span class="pkg-link" data-pkg="distr6" data-topic="Distribution" data-id="prec"><a href='../../distr6/html/Distribution.html#method-Distribution-prec'><code>distr6::Distribution$prec()</code></a></span></li>
<li><span class="pkg-link" data-pkg="distr6" data-topic="Distribution" data-id="print"><a href='../../distr6/html/Distribution.html#method-Distribution-print'><code>distr6::Distribution$print()</code></a></span></li>
<li><span class="pkg-link" data-pkg="distr6" data-topic="Distribution" data-id="setParameterValue"><a href='../../distr6/html/Distribution.html#method-Distribution-setParameterValue'><code>distr6::Distribution$setParameterValue()</code></a></span></li>
<li><span class="pkg-link" data-pkg="distr6" data-topic="Distribution" data-id="stdev"><a href='../../distr6/html/Distribution.html#method-Distribution-stdev'><code>distr6::Distribution$stdev()</code></a></span></li>
<li><span class="pkg-link" data-pkg="distr6" data-topic="Distribution" data-id="summary"><a href='../../distr6/html/Distribution.html#method-Distribution-summary'><code>distr6::Distribution$summary()</code></a></span></li>
<li><span class="pkg-link" data-pkg="distr6" data-topic="Distribution" data-id="workingSupport"><a href='../../distr6/html/Distribution.html#method-Distribution-workingSupport'><code>distr6::Distribution$workingSupport()</code></a></span></li>
<li><span class="pkg-link" data-pkg="distr6" data-topic="VectorDistribution" data-id="cf"><a href='../../distr6/html/VectorDistribution.html#method-VectorDistribution-cf'><code>distr6::VectorDistribution$cf()</code></a></span></li>
<li><span class="pkg-link" data-pkg="distr6" data-topic="VectorDistribution" data-id="entropy"><a href='../../distr6/html/VectorDistribution.html#method-VectorDistribution-entropy'><code>distr6::VectorDistribution$entropy()</code></a></span></li>
<li><span class="pkg-link" data-pkg="distr6" data-topic="VectorDistribution" data-id="getParameterValue"><a href='../../distr6/html/VectorDistribution.html#method-VectorDistribution-getParameterValue'><code>distr6::VectorDistribution$getParameterValue()</code></a></span></li>
<li><span class="pkg-link" data-pkg="distr6" data-topic="VectorDistribution" data-id="kurtosis"><a href='../../distr6/html/VectorDistribution.html#method-VectorDistribution-kurtosis'><code>distr6::VectorDistribution$kurtosis()</code></a></span></li>
<li><span class="pkg-link" data-pkg="distr6" data-topic="VectorDistribution" data-id="mean"><a href='../../distr6/html/VectorDistribution.html#method-VectorDistribution-mean'><code>distr6::VectorDistribution$mean()</code></a></span></li>
<li><span class="pkg-link" data-pkg="distr6" data-topic="VectorDistribution" data-id="median"><a href='../../distr6/html/VectorDistribution.html#method-VectorDistribution-median'><code>distr6::VectorDistribution$median()</code></a></span></li>
<li><span class="pkg-link" data-pkg="distr6" data-topic="VectorDistribution" data-id="mgf"><a href='../../distr6/html/VectorDistribution.html#method-VectorDistribution-mgf'><code>distr6::VectorDistribution$mgf()</code></a></span></li>
<li><span class="pkg-link" data-pkg="distr6" data-topic="VectorDistribution" data-id="mode"><a href='../../distr6/html/VectorDistribution.html#method-VectorDistribution-mode'><code>distr6::VectorDistribution$mode()</code></a></span></li>
<li><span class="pkg-link" data-pkg="distr6" data-topic="VectorDistribution" data-id="pgf"><a href='../../distr6/html/VectorDistribution.html#method-VectorDistribution-pgf'><code>distr6::VectorDistribution$pgf()</code></a></span></li>
<li><span class="pkg-link" data-pkg="distr6" data-topic="VectorDistribution" data-id="rand"><a href='../../distr6/html/VectorDistribution.html#method-VectorDistribution-rand'><code>distr6::VectorDistribution$rand()</code></a></span></li>
<li><span class="pkg-link" data-pkg="distr6" data-topic="VectorDistribution" data-id="skewness"><a href='../../distr6/html/VectorDistribution.html#method-VectorDistribution-skewness'><code>distr6::VectorDistribution$skewness()</code></a></span></li>
<li><span class="pkg-link" data-pkg="distr6" data-topic="VectorDistribution" data-id="variance"><a href='../../distr6/html/VectorDistribution.html#method-VectorDistribution-variance'><code>distr6::VectorDistribution$variance()</code></a></span></li>
<li><span class="pkg-link" data-pkg="distr6" data-topic="VectorDistribution" data-id="wrappedModels"><a href='../../distr6/html/VectorDistribution.html#method-VectorDistribution-wrappedModels'><code>distr6::VectorDistribution$wrappedModels()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ProductDistribution-new"></a>}}
\if{latex}{\out{\hypertarget{method-ProductDistribution-new}{}}}
\subsection{Method \code{new()}}{
Creates a new instance of this \link[R6:R6Class]{R6} class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ProductDistribution$new(
  distlist = NULL,
  distribution = NULL,
  params = NULL,
  shared_params = NULL,
  name = NULL,
  short_name = NULL,
  decorators = NULL,
  vecdist = NULL,
  ids = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{distlist}}{\code{(list())}\cr
List of \link{Distribution}s.}

\item{\code{distribution}}{\code{(character(1))} \cr
Should be supplied with \code{params} and optionally \code{shared_params} as an alternative to \code{distlist}.
Much faster implementation when only one class of distribution is being wrapped. \code{distribution}
is the full name of one of the distributions in \code{\link[=listDistributions]{listDistributions()}}, or \code{"Distribution"} if
constructing custom distributions. See examples in \link{VectorDistribution}.}

\item{\code{params}}{\code{(list()|data.frame())} \cr
Parameters in the individual distributions for use with \code{distribution}. Can be supplied as a list,
where each element is the list of parameters to set in the distribution, or as an object
coercable to \code{data.frame}, where each column is a parameter and each row is a distribution.
See examples in \link{VectorDistribution}.}

\item{\code{shared_params}}{\code{(list())}\cr
If any parameters are shared when using the \code{distribution} constructor, this provides a much faster
implementation to list and query them together. See examples in \link{VectorDistribution}.}

\item{\code{name}}{\code{(character(1))}\cr
Optional name of wrapped distribution.}

\item{\code{short_name}}{\code{(character(1))}\cr
Optional short name/ID of wrapped distribution.}

\item{\code{decorators}}{\code{(character())} \cr
Decorators to add to the distribution during construction.}

\item{\code{vecdist}}{\link{VectorDistribution} \cr
Alternative constructor to directly create this object from an object inheriting from
\link{VectorDistribution}.}

\item{\code{ids}}{\code{(character())} \cr
Optional ids for wrapped distributions in vector, should be unique and of same length as
the number of distributions.}
}
\if{html}{\out{</div>}}
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
ProductDistribution$new(list(Binomial$new(
  prob = 0.5,
  size = 10
), Normal$new(mean = 15)))

ProductDistribution$new(
  distribution = "Binomial",
  params = list(
    list(prob = 0.1, size = 2),
    list(prob = 0.6, size = 4),
    list(prob = 0.2, size = 6)
  )
)

# Equivalently
ProductDistribution$new(
  distribution = "Binomial",
  params = data.table::data.table(prob = c(0.1, 0.6, 0.2), size = c(2, 4, 6))
)
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ProductDistribution-strprint"></a>}}
\if{latex}{\out{\hypertarget{method-ProductDistribution-strprint}{}}}
\subsection{Method \code{strprint()}}{
Printable string representation of the \code{ProductDistribution}. Primarily used internally.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ProductDistribution$strprint(n = 10)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{n}}{\code{(integer(1))}\cr
Number of distributions to include when printing.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ProductDistribution-pdf"></a>}}
\if{latex}{\out{\hypertarget{method-ProductDistribution-pdf}{}}}
\subsection{Method \code{pdf()}}{
Probability density function of the product distribution. Computed by
\deqn{f_P(X1 = x1,...,XN = xN) = \prod_{i} f_{Xi}(xi)}
where \eqn{f_{Xi}} are the pdfs of the wrapped distributions.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ProductDistribution$pdf(..., log = FALSE, simplify = TRUE, data = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{\code{(numeric())} \cr
Points to evaluate the function at Arguments do not need
to be named. The length of each argument corresponds to the number of points to evaluate,
the number of arguments corresponds to the number of variables in the distribution.
See examples.}

\item{\code{log}}{\code{(logical(1))} \cr
If \code{TRUE} returns the logarithm of the probabilities. Default is \code{FALSE}.}

\item{\code{simplify}}{\code{logical(1)} \cr
If \code{TRUE} (default) simplifies the return if possible to a \code{numeric}, otherwise returns a
\link[=data.table]{data.table::data.table}.}

\item{\code{data}}{\link{array} \cr
Alternative method to specify points to evaluate. If univariate then rows correspond with number
of points to evaluate and columns correspond with number of variables to evaluate. In the special
case of \link{VectorDistribution}s of multivariate distributions, then the third dimension corresponds
to the distribution in the vector to evaluate.}
}
\if{html}{\out{</div>}}
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{p <- ProductDistribution$new(list(
Binomial$new(prob = 0.5, size = 10),
Binomial$new()))
p$pdf(1:5)
p$pdf(1, 2)
p$pdf(1:2)
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ProductDistribution-cdf"></a>}}
\if{latex}{\out{\hypertarget{method-ProductDistribution-cdf}{}}}
\subsection{Method \code{cdf()}}{
Cumulative distribution function of the product distribution. Computed by
\deqn{F_P(X1 = x1,...,XN = xN) = \prod_{i} F_{Xi}(xi)}
where \eqn{F_{Xi}} are the cdfs of the wrapped distributions.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ProductDistribution$cdf(
  ...,
  lower.tail = TRUE,
  log.p = FALSE,
  simplify = TRUE,
  data = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{\code{(numeric())} \cr
Points to evaluate the function at Arguments do not need
to be named. The length of each argument corresponds to the number of points to evaluate,
the number of arguments corresponds to the number of variables in the distribution.
See examples.}

\item{\code{lower.tail}}{\code{(logical(1))} \cr
If \code{TRUE} (default), probabilities are \code{X <= x}, otherwise, \code{P(X > x)}.}

\item{\code{log.p}}{\code{(logical(1))} \cr
If \code{TRUE} returns the logarithm of the probabilities. Default is \code{FALSE}.}

\item{\code{simplify}}{\code{logical(1)} \cr
If \code{TRUE} (default) simplifies the return if possible to a \code{numeric}, otherwise returns a
\link[=data.table]{data.table::data.table}.}

\item{\code{data}}{\link{array} \cr
Alternative method to specify points to evaluate. If univariate then rows correspond with number
of points to evaluate and columns correspond with number of variables to evaluate. In the special
case of \link{VectorDistribution}s of multivariate distributions, then the third dimension corresponds
to the distribution in the vector to evaluate.}
}
\if{html}{\out{</div>}}
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{p <- ProductDistribution$new(list(
Binomial$new(prob = 0.5, size = 10),
Binomial$new()))
p$cdf(1:5)
p$cdf(1, 2)
p$cdf(1:2)
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ProductDistribution-quantile"></a>}}
\if{latex}{\out{\hypertarget{method-ProductDistribution-quantile}{}}}
\subsection{Method \code{quantile()}}{
The quantile function is not implemented for product distributions.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ProductDistribution$quantile(
  ...,
  lower.tail = TRUE,
  log.p = FALSE,
  simplify = TRUE,
  data = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{\code{(numeric())} \cr
Points to evaluate the function at Arguments do not need
to be named. The length of each argument corresponds to the number of points to evaluate,
the number of arguments corresponds to the number of variables in the distribution.
See examples.}

\item{\code{lower.tail}}{\code{(logical(1))} \cr
If \code{TRUE} (default), probabilities are \code{X <= x}, otherwise, \code{P(X > x)}.}

\item{\code{log.p}}{\code{(logical(1))} \cr
If \code{TRUE} returns the logarithm of the probabilities. Default is \code{FALSE}.}

\item{\code{simplify}}{\code{logical(1)} \cr
If \code{TRUE} (default) simplifies the return if possible to a \code{numeric}, otherwise returns a
\link[=data.table]{data.table::data.table}.}

\item{\code{data}}{\link{array} \cr
Alternative method to specify points to evaluate. If univariate then rows correspond with number
of points to evaluate and columns correspond with number of variables to evaluate. In the special
case of \link{VectorDistribution}s of multivariate distributions, then the third dimension corresponds
to the distribution in the vector to evaluate.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ProductDistribution-clone"></a>}}
\if{latex}{\out{\hypertarget{method-ProductDistribution-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ProductDistribution$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
